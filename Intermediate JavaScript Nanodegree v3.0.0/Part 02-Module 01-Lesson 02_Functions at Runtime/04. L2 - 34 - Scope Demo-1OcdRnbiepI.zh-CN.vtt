WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.375
这是一个叫做 myName 的变量

00:00:03.375 --> 00:00:05.785
设为字符串“Andrew”.

00:00:05.785 --> 00:00:07.935
这是在该 Javascript 文件中的变量

00:00:07.934 --> 00:00:09.785
但它不位于任何函数中

00:00:09.785 --> 00:00:12.210
因此是全局作用域

00:00:12.210 --> 00:00:14.940
现在编写一个函数 叫做 introduceMyself

00:00:14.939 --> 00:00:16.387
并在其中定义一个局部变量

00:00:16.387 --> 00:00:24.519
这是

00:00:24.519 --> 00:00:27.429
设为 student 的 you 变量

00:00:27.429 --> 00:00:29.410
它是局部变量

00:00:29.410 --> 00:00:32.854
表示它直接在 introduceMyself 中声明

00:00:32.854 --> 00:00:36.669
我们再写一个函数 叫做 introduce

00:00:36.670 --> 00:00:38.890
并从 introduceMyself 中返回它

00:00:38.890 --> 00:00:44.039
好的

00:00:44.039 --> 00:00:45.655
我们看看会发生什么情况

00:00:45.655 --> 00:00:48.395
这是 introduce 函数

00:00:48.395 --> 00:00:51.275
它的作用是向控制台中输出一条消息

00:00:51.274 --> 00:00:54.570
该消息引用了我们在此处定义的两个变量

00:00:54.570 --> 00:00:57.960
包括 you 和 myName

00:00:57.960 --> 00:01:00.664
分析下二者 看看发生了什么情况

00:01:00.664 --> 00:01:04.789
我们知道 myName 是在整个函数之外定义的变量

00:01:04.790 --> 00:01:07.865
表示它是具有全局作用域的全局变量

00:01:07.864 --> 00:01:10.084
所有函数都可以使用它

00:01:10.084 --> 00:01:13.174
包括 introduceMyself 和 introduce

00:01:13.174 --> 00:01:14.444
我们知道该函数了

00:01:14.444 --> 00:01:16.239
但是这个 you 变量呢？

00:01:16.239 --> 00:01:21.769
它看起来有点奇怪 因为 introduce 函数引用了 you

00:01:21.769 --> 00:01:24.719
虽然 you 从未作为参数传入其中

00:01:24.719 --> 00:01:29.385
you 也没有在 introduce 中被声明为局部变量

00:01:29.385 --> 00:01:32.510
这一切都可行 因为嵌套函数作用域

00:01:32.510 --> 00:01:36.645
包括在该作用域中定义的变量 函数一开始是在该作用域内定义的

00:01:36.644 --> 00:01:38.670
换句话说 可以访问 you

00:01:38.670 --> 00:01:42.890
因为 introduce 依然可以访问其父函数的作用域

00:01:42.890 --> 00:01:46.609
you 正是在该作用域内定义的

00:01:46.609 --> 00:01:49.640
最后 我们调用 introduceMyself 看看整个消息

00:01:49.640 --> 00:01:57.875
就是这个消息

00:01:57.875 --> 00:02:00.319
Hello  student, I'm Andrew！

