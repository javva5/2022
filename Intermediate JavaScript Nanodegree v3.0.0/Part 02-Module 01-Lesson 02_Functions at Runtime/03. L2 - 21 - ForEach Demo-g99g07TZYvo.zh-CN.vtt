WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.730
这是一个叫做 favoriteFlavors 的数组

00:00:02.730 --> 00:00:04.990
其中包含了各种美味的冰激凌口味

00:00:04.990 --> 00:00:07.940
有曲奇饼 咸焦糖和太妃糖口味

00:00:07.940 --> 00:00:09.810
我们使用 forEach 循环

00:00:09.810 --> 00:00:11.883
循环访问该数组中的每种口味

00:00:11.882 --> 00:00:16.699
首先 我将对 favoriteFlavors 调用 forEach

00:00:20.170 --> 00:00:24.785
ForEach 接收回调参数

00:00:24.785 --> 00:00:27.515
现在 你需要传入 forEach

00:00:27.515 --> 00:00:33.020
系统会针对该数组中的每种口味调用该函数

00:00:33.560 --> 00:00:39.609
forEach 将循环访问整个 favoriteFlavors 数组

00:00:39.609 --> 00:00:44.000
并对该数组中的每种口味调用该函数

00:00:44.000 --> 00:00:48.289
对于第一个口味 你应该会看到消息“I enjoy cookie dough ice cream”

00:00:48.289 --> 00:00:51.339
然后是下个口味 咸焦糖

00:00:51.340 --> 00:00:53.545
你应该会看到消息“I enjoy salted caramel ice cream”

00:00:53.545 --> 00:00:56.410
太妃糖口味也一样

00:00:56.409 --> 00:01:01.109
我们看看运行效果 很酷 这就是发生的情况

00:01:01.109 --> 00:01:04.263
代码首先访问曲奇饼口味 然后组成一个句子

00:01:04.263 --> 00:01:06.100
接着访问该数组中的下个元素

00:01:06.099 --> 00:01:08.109
即下个口味 咸焦糖

00:01:08.109 --> 00:01:09.969
并组成这个句子

00:01:09.969 --> 00:01:11.245
遇到太妃糖口味时

00:01:11.245 --> 00:01:13.715
执行相同的操作

00:01:13.715 --> 00:01:15.555
一切发生得很快

00:01:15.555 --> 00:01:19.390
我们可以在这里放置调试程序 逐步看看代码运行情况

00:01:19.390 --> 00:01:21.969
可以看看每次迭代是如何访问整个 flavorFlavors 数组的

00:01:21.969 --> 00:01:26.489
然后逐个组成句子

00:01:26.489 --> 00:01:29.920
首先 我将重新加载下 以便有更多的空间

00:01:29.920 --> 00:01:40.820
然后向传入 forEach 的函数中添加调试程序

00:01:40.819 --> 00:01:42.689
现在这里有了调试程序

00:01:42.689 --> 00:01:46.420
我们逐步运行该函数 看看发生的情况

00:01:46.420 --> 00:01:48.570
可以看到 我们现在位于该函数中

00:01:48.569 --> 00:01:50.639
位于这个调试程序行

00:01:50.640 --> 00:01:54.314
目前访问的口味是曲奇饼口味

00:01:54.314 --> 00:01:57.989
应该是数组中的第一个元素 在这里

00:01:57.989 --> 00:02:00.000
我们从最前面开始

00:02:00.000 --> 00:02:04.155
我们逐步执行代码 看看发生的情况

00:02:04.155 --> 00:02:08.069
我们现在位于该函数的第二行

00:02:08.069 --> 00:02:11.358
并位于 console.log 部分 口味依然是曲奇饼

00:02:11.359 --> 00:02:14.525
再循环访问一次

00:02:14.525 --> 00:02:18.349
现在位于这里 控制台中出现了

00:02:18.349 --> 00:02:20.042
“I enjoy cookie dough ice cream”消息

00:02:20.042 --> 00:02:22.719
现在转到下一步

00:02:22.719 --> 00:02:25.649
如果再次按下这个按钮

00:02:25.649 --> 00:02:30.900
现在转到了咸焦糖 即数组中的第二个元素

00:02:30.900 --> 00:02:34.015
看起来是按顺序循环访问这个 favoriteFlavors 数组

00:02:34.014 --> 00:02:39.000
看看下一步 不出所料

00:02:39.000 --> 00:02:40.199
依然是咸焦糖

00:02:40.199 --> 00:02:47.129
这行依然尚未运行 我们运行它

00:02:47.129 --> 00:02:50.525
可以看到控制台中出现了“I enjoy salted caramel ice cream”这条消息

00:02:50.525 --> 00:02:56.432
继续最后一步 现在是数组中的最后一个元素

00:02:56.432 --> 00:02:59.004
最后一个口味 即太妃糖

00:02:59.004 --> 00:03:00.894
再次播放的话

00:03:00.895 --> 00:03:05.125
转到了这一行 该行执行时

00:03:05.125 --> 00:03:09.282
我们看到控制台中显示了“I enjoyed toffee ice cream”

00:03:09.282 --> 00:03:12.977
我们从头运行整个代码

00:03:12.978 --> 00:03:15.540
结果是这样 我们总结下刚刚执行的步骤

00:03:15.539 --> 00:03:16.939
我们对 favoriteFlavors 数组调用了 forEach

00:03:16.939 --> 00:03:20.472
我向上滚动下

00:03:20.473 --> 00:03:21.968
它是一个具有以下不同字符串的数组

00:03:21.967 --> 00:03:23.574
cookie dough salted caramel 和 toffee

00:03:23.574 --> 00:03:29.000
我们对该数组中的每个元素都执行了一次这个函数

