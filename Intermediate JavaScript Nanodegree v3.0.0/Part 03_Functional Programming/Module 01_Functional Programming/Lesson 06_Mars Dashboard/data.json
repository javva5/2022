{
  "data": {
    "lesson": {
      "id": 953164,
      "key": "8bf3a7f1-e63f-4676-b93e-2f4f1560a2dd",
      "title": "Mars Dashboard",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "In this project, you will create a dashboard that consumes the NASA API and applies all the functional programming learned throughout this course.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": null,
      "project": {
        "key": "4f16bb05-967f-46a8-ac30-4a58269877c4",
        "version": "1.0.0",
        "locale": "en-us",
        "duration": 40320,
        "semantic_type": "Project",
        "title": "Mars Dashboard",
        "description": "## Project Summary\nCreate a dashboard that displays the most up to date information from the NASA API on the Mars rovers. \n\n## Submission Checklist\nBefore you submit, check if the following have been completed:  \n\n|    | |\n|-------------------------|--------------------------------------------------------------------------------------------------------------|\n| <input type=\"checkbox\"> | Everything in the [Rubric](https://review.udacity.com/#!/rubrics/2708/view) is complete. |\n| <input type=\"checkbox\"> | Rename the `starter` folder. |\n| <input type=\"checkbox\"> | The folder/repo you submit contains all the files listed <br>in the Frontend/Backend File structure found in the rubric.  |\n| | | |\n\n**Note**: The checklist above won't save your checkmarks so do this right before you plan to submit.\n\n## Ready to Submit?\nOnce you have all the items above completed, you can click the submit button. Follow the directions to submit your project in one of the following ways:\n* Submit a zip file \n* Submit a Github repo\n\n**Note**: If you used the Workspace/Online option, you can download the folder or use your Github as a submission.",
        "is_public": true,
        "summary": null,
        "forum_path": "",
        "rubric_id": "2708",
        "terminal_project_id": null,
        "resources": null,
        "image": null
      },
      "lab": null,
      "concepts": [
        {
          "id": 953166,
          "key": "0d9db495-2e75-478f-be84-f19e6e4df8c0",
          "title": "Project Overview",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "0d9db495-2e75-478f-be84-f19e6e4df8c0",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 956978,
              "key": "42199754-f0c3-4a70-8675-28c42d4caa65",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Big Picture\nYou are going to create a dashboard that consumes the NASA API. Your dashboard will allow the user to select which rover's information they want to view. Once they have selected a rover, they will be able to see the most recent images taken by that rover, as well as important information about the rover and its mission. Your app will make use of all the functional concepts and practices you have learned in this course, and the goal is that you would become very comfortable using pure functions and iterating over, reshaping, and accessing information from complex API responses.\n\n### Project Requirements\n\nYou can look at the rubric [here](https://review.udacity.com/#!/rubrics/2708/view) for a more in-depth look at the project requirements.\n\nTo complete this project, your UI must **show** the following:\n - A gallery of the most recent images sent from each mars rover.\n - The launch date, landing date, name and status along with any other information about the rover.\n - A selection bar for the user to choose which rover's information they want to see.\n\nTo complete this project, your UI must **do** the following:\n - Be responsive. Needs to look good (AKA not broken) on the following devices:\n   - Phones (max-width 768px) \n   - Desktop (min-width 991px, max-width 1824px). \n   - [Optional] Tablet view \n - Provide a way to dynamically switch the UI to view one of the three rovers. (**NOTE**: This can be done using tabs, buttons, or any other UI control)\n\nTo complete this project, your frontend code must:\n- Use only pure functions.\n- Use at least one Higher Order Function.\n- Use the array method `map`.\n- Use the ImmutableJS library.\n\nTo complete this project, your backend code must:\n - Be built with Node/Express.\n - Make successful calls to the NASA API.\n - Use pure functions to do any logic necessary.\n - Hide any sensitive information from public view (In other words, use your `dotenv` file).\n\n### Above and Beyond\nThe NASA API has a lot more data to offer than what we are using here. There's no extra credit in this course, but it could be fun to explore their API and see what they have to offer and what strikes your creativity to add to your project. You are not limited to the API calls we require. Look [here](https://api.nasa.gov/#browseAPI) at the Browse API's section to see all that's available.\n\nSome ideas might be to incorporate the Astronomy Photo of the Day into your design, collect weather information on Mars, etc...\n\n### Design\nCreate an image gallery slider, put a full-page background image, code some falling asteroids with CSS animations ... the visual design of this UI is up to you! There is a lot of awesome dashboard design inspiration out there. You have already been given a good start with a mobile-first stylesheet already set up for you.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 956979,
          "key": "557df94b-1ecf-488c-a347-6579386d27b2",
          "title": "Project Instructions",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "557df94b-1ecf-488c-a347-6579386d27b2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 956980,
              "key": "e00bc3fe-42fd-40fd-bc29-eb03f96f1b18",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Offline Instructions\n\nWe have supplied some of the foundational code for you. So follow these steps to get started:\n\n1. We'll start with the typical setup - clone this repo and install the dependencies\n * To clone the repo into the desired location on your local machine:  \n```$ git clone --branch project https://github.com/udacity/nd032-c2-functional-programming-with-javascript-starter.git```\n * For this project we are using `yarn` as our package manager, so to install your dependencies run:  \n```yarn install```.  \n **Note**: If you donâ€™t have yarn installed globally, follow their installation documentation [here](https://yarnpkg.com/lang/en/docs/install) according to your operating system.\n2. Next, you'll need a NASA developer API key in order to access the API endpoints. To do that, go here: https://api.nasa.gov/. If you want to simply look around at what API endpoints NASA offers, you can use their provided DEMO_KEY to do this.\n3. In your repo, you will see a `.env-example` file with a place for your API key. Rename or copy the file to one called `.env` and enter in your key. Now that you have your key, just remember to add it as a parameter to every request you make to NASA.\n4. Run `yarn start` in your terminal and go to `http:localhost:3000` to check that your app is working. If you don't see something like the **screenshot below** with a different image, check that your API key is set up correctly.\n5. Remember to commit frequently, use branches, and leave good commit messages! You'll thank yourself later.\n6. **Before you submit go to the last Concept - Mars Dashboard and complete the Submission Checklist.**\n",
              "instructor_notes": ""
            },
            {
              "id": 957385,
              "key": "e48930ed-d75e-43fa-925d-8a39b27976b5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Online Instructions\n\nGo to the next Concept called **Workspace** and this is also present in the `README.md` file in the workspace. \n\n1. Check that the `starter` folder is present in `/>home>workspace>starter`.\n2. Next, you'll need a NASA developer API key in order to access the API endpoints. To do that, go here: https://api.nasa.gov/. If you want to simply look around at what API endpoints NASA offers, you can use their provided DEMO_KEY to do this.\n3. In your repo, you will see a .env-example file with a place for your API key. Rename or copy the file to one called `.env` and enter your key. Now that you have your key, just remember to add it as a parameter to every request you make to NASA.\n4. Run `yarn install` in your terminal and make sure no error occurs.\n5. In the terminal change directory into the `starter` directory with the command `cd starter`, then run `yarn start`, and make sure no error occurs. \n6. Click the <span style=\"color:lightblue\">Preview</span> button at the bottom right-hand corner of the screen to open a new page/tab with the **screenshot below** with a different image, check that your API key is set up correctly.  \n7. The Workspace should automatically save your update to the file. You can download the `starter` folder and upload it to your Github to commit frequently, use branches, and leave good commit messages! You'll thank yourself later.\n8. **Before you submit go to the last Concept - Mars Dashboard and complete the Submission Checklist.**\n\n-----",
              "instructor_notes": ""
            },
            {
              "id": 958524,
              "key": "83fd9b72-8059-44df-82a3-71aac49edbf8",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/November/5dd48425_instructions-startercodecheck/instructions-startercodecheck.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/83fd9b72-8059-44df-82a3-71aac49edbf8",
              "caption": "An example of what should be seen when the setup is completed correctly. ",
              "alt": "",
              "width": 2876,
              "height": 1440,
              "instructor_notes": null
            }
          ]
        },
        {
          "id": 957034,
          "key": "acad216d-c9aa-4a52-bf41-80580e503da0",
          "title": "Workspace",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "acad216d-c9aa-4a52-bf41-80580e503da0",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 957383,
              "key": "d0f35da1-4434-4628-9c6a-e78f54821dd3",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "r950324c957034xREACTr0lcusuk",
              "pool_id": "webterminal",
              "view_id": "react-5exmp",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "port": 3000,
                    "ports": [],
                    "userCode": "curl -o- -L https://yarnpkg.com/install.sh | bash",
                    "openFiles": [
                      "/home/workspace/starter/README.md"
                    ],
                    "showFiles": true,
                    "allowClose": true,
                    "allowSubmit": false,
                    "terminalTitle": "BASH",
                    "actionButtonText": "Preview",
                    "openTerminalOnStartup": true
                  },
                  "kind": "react"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "starter_files",
      "reason": "prefer master_archive_id"
    }
  ]
}