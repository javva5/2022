{
  "id": 2786,
  "project_id": 700,
  "upload_types": [
    "repo",
    "zip"
  ],
  "file_filter_regex": "\\A(?!(((.*/)?(__MACOSX|\\.git|node_modules|bower_components|jspm_packages|\\.idea|build|.ipynb_checkpoints|\\.Trash-0|logs)(\\Z|/))))((.*\\.(js|css|py|html|htm|txt|md|markdown|sql|swift|java|ts|gradle|xml|rst|yml|yaml|rmd|pdf|docx|h|H|hh|hxx|h\\+\\+|c|C|cc|cpp|cxx|c\\+\\+)\\Z)|((.*/)?(README|Readme|readme|Makefile)\\Z))",
  "nomination_eligible": false,
  "stand_out": "- Validate the form data to ensure the data is acceptable and complete. \n- Allow the user to generate a new infographic. \n- Move the tile colors from CSS to JS for more control. \n- Randomize the order of the tiles while keeping the human in the middle. \n- Create a hover state on the tiles that displays the rest of the species statistics. \n- Create additional methods for comparing data. \n- Rewrite the project to use [constructor functions, factory functions, the module pattern, and revealing module pattern](https://medium.com/javascript-scene/javascript-factory-functions-vs-constructor-functions-vs-classes-2f22ceddf33e)\n- Allow the user to select different units for the numbers and update the methods to account for this. \n",
  "hide_criteria": false,
  "created_at": "2020-01-07T18:28:49.132Z",
  "updated_at": "2020-07-27T21:15:42.911Z",
  "hashtag": "",
  "max_upload_size_mb": 500,
  "estimated_sla": null,
  "project_assistant_enabled": false,
  "available_for_cert_project": false,
  "language": "en-us",
  "ndkeys": [
    "nd032-beta",
    "nd032",
    "nd032-ent"
  ],
  "coursekeys": [],
  "is_career": false,
  "sections": [
    {
      "id": 5937,
      "name": "Code Functionality & UI",
      "created_at": "2020-01-07T18:30:16.125Z",
      "updated_at": "2020-01-07T18:30:35.569Z",
      "deleted_at": null,
      "position": 0,
      "rubric_id": 2786,
      "rubric_items": [
        {
          "id": 17053,
          "section_id": 5937,
          "passed_description": "No error messages should be logged to console. Console should also be void of any console.log statements. ",
          "exceeded_description": null,
          "created_at": "2020-01-07T18:30:36.086Z",
          "updated_at": "2020-01-07T18:32:26.960Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Clicking “Compare me” on index.html produces no errors.",
          "exceedable": false
        },
        {
          "id": 17054,
          "section_id": 5937,
          "passed_description": "There should be a click event where form should no longer be visible on the UI once the button is clicked. ",
          "exceeded_description": null,
          "created_at": "2020-01-07T18:30:36.866Z",
          "updated_at": "2020-01-07T18:32:26.966Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "On click, form was removed from DOM",
          "exceedable": false
        },
        {
          "id": 17055,
          "section_id": 5937,
          "passed_description": "The Dom should contain a grid of 9 tiles with the following conditions:\n\n- 7 Dinosaurs with species, image, and random fact displayed\n- 1 Human located in the middle with name from input displayed in place of species and no fact.\n- 1 Bird with species, image, and the fact, “All birds are Dinosaurs.”\n- Refreshing the screen and entering new data should reveal different facts. \n",
          "exceeded_description": null,
          "created_at": "2020-01-07T18:32:27.272Z",
          "updated_at": "2020-01-07T18:36:00.920Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "On click, grid of 9 tiles added to DOM",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5938,
      "name": "Code Quality",
      "created_at": "2020-01-07T18:36:01.441Z",
      "updated_at": "2020-01-07T18:36:13.338Z",
      "deleted_at": null,
      "position": 1,
      "rubric_id": 2786,
      "rubric_items": [
        {
          "id": 17056,
          "section_id": 5938,
          "passed_description": "Ensure that the code follows [Udacity javascript coding standards](http://udacity.github.io/frontend-nanodegree-styleguide/javascript.html) and be linted and commented. ",
          "exceeded_description": null,
          "created_at": "2020-01-07T18:36:13.587Z",
          "updated_at": "2020-01-07T18:37:48.295Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Code should follow Udacity coding standards",
          "exceedable": false
        },
        {
          "id": 17057,
          "section_id": 5938,
          "passed_description": "Code should minimize code repetition and be easy to read and easy to maintain (DRY).\n\nIt should name variables descriptively, and optionally use comments as needed to document code functionality. Functions should include comments to describe the function. Functions should be declared before they are called. Class (regardless of how it is created) should be easy to recognize and commented as such. \n",
          "exceeded_description": null,
          "created_at": "2020-01-07T18:36:25.065Z",
          "updated_at": "2020-01-07T18:37:48.300Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Code is readable and DRY",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5939,
      "name": "OOJS Concepts",
      "created_at": "2020-01-07T18:37:48.826Z",
      "updated_at": "2020-01-07T18:37:52.888Z",
      "deleted_at": null,
      "position": 2,
      "rubric_id": 2786,
      "rubric_items": [
        {
          "id": 17058,
          "section_id": 5939,
          "passed_description": "There should be at least 1 class/function for creating new objects. There should be 9 objects created.",
          "exceeded_description": null,
          "created_at": "2020-01-07T18:37:53.247Z",
          "updated_at": "2020-01-07T18:41:42.825Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Contain a class and all necessary objects",
          "exceedable": false
        },
        {
          "id": 17059,
          "section_id": 5939,
          "passed_description": "Student should complete the human object with data pulled from the form when “Compare me” is clicked. ",
          "exceeded_description": null,
          "created_at": "2020-01-07T18:38:07.959Z",
          "updated_at": "2020-01-07T18:41:42.837Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Get user data from the DOM",
          "exceedable": false
        },
        {
          "id": 17060,
          "section_id": 5939,
          "passed_description": "There should be at least 3 methods which compare dino data to the user data from the DOM. Student may choose to add additional options to the form to compare alternative items such as location, length, or time period.",
          "exceeded_description": null,
          "created_at": "2020-01-07T18:38:08.530Z",
          "updated_at": "2020-01-07T18:41:42.834Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Contain at least 3 methods for comparisons",
          "exceedable": false
        },
        {
          "id": 17061,
          "section_id": 5939,
          "passed_description": "Iterate through objects to create tiles with species, image, and fact that are appended to DOM. Conditionally display appropriate information for Human, Bird and Dinosaurs.",
          "exceeded_description": null,
          "created_at": "2020-01-07T18:38:08.869Z",
          "updated_at": "2020-01-07T18:41:42.841Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "Append tiles with object data to DOM",
          "exceedable": false
        }
      ]
    }
  ],
  "project": {
    "id": 700,
    "name": "Dinosaurs",
    "nanodegree_key": "nd032",
    "is_cert_project": false,
    "audit_project_id": null,
    "hashtag": null,
    "audit_rubric_id": 2899,
    "entitlement_required": false,
    "is_career": false,
    "recruitment_family_id": 12,
    "created_at": "2020-01-09T22:03:28.242Z",
    "updated_at": "2021-04-04T22:56:41.180Z",
    "price": "5.5",
    "ungradeable_price": "3.0",
    "audit_price": "0.0"
  }
}