WEBVTT
Kind: captions
Language: pt-BR

00:00:00.933 --> 00:00:04.000
Temos a função construtora "Animal"
junto com o método "walk"

00:00:04.033 --> 00:00:06.200
definido diretamente
no protótipo do animal.

00:00:06.233 --> 00:00:09.200
Também temos a função
construtora "Cat".

00:00:09.233 --> 00:00:11.133
Você deve ter percebido

00:00:11.167 --> 00:00:14.300
que estamos utilizando
o método "call()" aqui

00:00:14.333 --> 00:00:15.733
na construtora "Cat"

00:00:15.767 --> 00:00:19.433
e estamos invocando isso
na construtora "Animal".

00:00:19.467 --> 00:00:22.267
Isso é porque queremos chamar
a superconstrutora

00:00:22.300 --> 00:00:25.333
na instância "cat"
ou nos objetos "cat".

00:00:25.367 --> 00:00:29.233
Caso contrário,
"this.name" seria indefinido.

00:00:29.967 --> 00:00:33.167
Além disso, utilizamos "call()"
em vez do novo operador

00:00:33.200 --> 00:00:35.467
para invocar
a construtora "Animal",

00:00:35.500 --> 00:00:38.467
pois não queremos construir
um novo objeto animal.

00:00:38.500 --> 00:00:41.633
O importante é a lógica
de inicialização da "Animal"

00:00:41.667 --> 00:00:45.400
na instância "cat"
ou no objeto "cat".

00:00:45.433 --> 00:00:48.333
O método "call()"
invoca "Animal"

00:00:48.367 --> 00:00:51.633
e configura "this"
à instância "cat".

00:00:52.867 --> 00:00:54.667
Ótimo. Vamos retornar.

00:00:56.200 --> 00:00:58.933
Vamos fazer "cat"
herdar da "Animal".

00:01:05.833 --> 00:01:08.600
Nós precisamos alterar
a construtora,

00:01:08.633 --> 00:01:10.833
caso contrário,
os objetos "cat"

00:01:10.867 --> 00:01:14.200
terão a construtora
apontando para "Animal",

00:01:14.233 --> 00:01:16.933
mas ela deve apontar para "Cat".
Vamos mudar isso.

00:01:21.867 --> 00:01:25.800
Vou limpar o console
para ter mais espaço.

00:01:25.833 --> 00:01:28.333
Vamos adicionar um método
ao protótipo "cat"

00:01:28.367 --> 00:01:30.200
para ser compartilhado
por todos.

00:01:30.233 --> 00:01:31.967
Vamos chamá-lo de "meow".

00:01:37.133 --> 00:01:39.800
Chamamos a construtora "Cat"
com o novo operador

00:01:39.833 --> 00:01:41.967
e instanciamos
um novo objeto "cat".

00:01:42.000 --> 00:01:43.700
Vamos chamá-lo de "Bambi".

00:01:46.267 --> 00:01:49.700
Vamos garantir que "Bambi" possua
propriedades e métodos.

00:01:49.733 --> 00:01:51.100
Temos "meow",

00:01:54.933 --> 00:01:58.633
"walk", que herdamos
da construtora "Animal"...

00:02:00.067 --> 00:02:03.800
e, quando chamamos "bambi.name",
obtemos o nome do Bambi.

00:02:06.667 --> 00:02:10.500
Para recapitular, para gerenciar
herança no JavaScript,

00:02:10.533 --> 00:02:13.767
devemos evitar mudar
o protótipo completamente,

00:02:13.800 --> 00:02:17.067
e "object.create"
nos permite fazer isso.

