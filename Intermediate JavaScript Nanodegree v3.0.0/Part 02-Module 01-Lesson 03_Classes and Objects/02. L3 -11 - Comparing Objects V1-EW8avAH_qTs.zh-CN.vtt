WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:05.705
我们编写叫做 SoftwareDeveloper 的构造函数

00:00:05.705 --> 00:00:11.984
总结下 如果使用关键字 new 调用 SoftwareDeveloper

00:00:11.984 --> 00:00:15.879
将创建一个新的对象 其中具有 favoriteLanguage 属性

00:00:15.880 --> 00:00:17.949
值为 JavaScript

00:00:17.949 --> 00:00:19.210
我们使用关键字 new

00:00:19.210 --> 00:00:24.140
调用构造函数 SoftwareDeveloper 并新建一个对象

00:00:24.140 --> 00:00:28.670
称之为 developer

00:00:28.670 --> 00:00:31.700
看看 developer 的样子

00:00:31.699 --> 00:00:36.551
它的确是一个对象 具有一个属性 favoriteLanguage

00:00:36.551 --> 00:00:38.640
设为字符串 JavaScript

00:00:38.640 --> 00:00:40.350
最方便的是还可以看到

00:00:40.350 --> 00:00:42.450
在 Chrome 开发者工具中

00:00:42.450 --> 00:00:45.720
还引用了构造函数 SoftwareDeveloper

00:00:45.719 --> 00:00:46.769
现在我们手动写一个新的对象

00:00:46.770 --> 00:00:50.205
而不是调用 SoftwareDeveloper 构造函数

00:00:50.204 --> 00:00:51.649
创建一个

00:00:51.649 --> 00:00:54.701
我们采用对象字面量的方式手动编写

00:00:54.701 --> 00:00:58.519
称之为 otherDeveloper

00:00:58.710 --> 00:01:05.049
访问它 看看效果

00:01:05.049 --> 00:01:07.189
与 developer 相比

00:01:07.189 --> 00:01:10.174
这两个对象看起来似乎一样

00:01:10.174 --> 00:01:14.844
它同样具有一个属性 值为 JavaScript 和这里一样

00:01:14.844 --> 00:01:17.239
但注意创建对象所用的构造函数

00:01:17.239 --> 00:01:20.140
没有列在 Chrome 开发者工具中

00:01:20.140 --> 00:01:23.560
根据你所使用的开发者工具（例如 Safari 开发者工具或 Firefox 中的开发者工具）

00:01:23.560 --> 00:01:25.647
看起来可能不一样

00:01:25.647 --> 00:01:29.629
但在 Chrome 中 创建对象用到的构造函数通常会显示在这里

00:01:29.629 --> 00:01:33.000
展开每个部分

00:01:33.370 --> 00:01:37.143
看看它们的 proto 属性

00:01:37.143 --> 00:01:39.730
暂时不用担心什么是 proto

00:01:39.730 --> 00:01:42.939
稍后我们会详细讲解的

00:01:42.939 --> 00:01:46.129
可以看出 developer 的构造函数

00:01:46.129 --> 00:01:50.429
实际上是 SoftwareDeveloper 函数

00:01:50.430 --> 00:01:52.695
但是对于 otherDeveloper

00:01:52.694 --> 00:01:56.689
constructor 属性实际上为 object 构造函数

00:01:56.689 --> 00:01:58.129
快速比较下

00:01:58.129 --> 00:02:00.034
原型将有所不同

00:02:00.034 --> 00:02:02.170
稍后我们会详细讲解每个原型的

