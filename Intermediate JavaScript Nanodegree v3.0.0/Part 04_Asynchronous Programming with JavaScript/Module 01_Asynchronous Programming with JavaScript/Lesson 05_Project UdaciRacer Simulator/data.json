{
  "data": {
    "lesson": {
      "id": 1015301,
      "key": "dea404b8-837a-4ba2-8b6a-31fa458e7207",
      "title": "Project: UdaciRacer Simulator",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": null,
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/dea404b8-837a-4ba2-8b6a-31fa458e7207/1015301/1594150444083/Project%3A+UdaciRacer+Simulator+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/dea404b8-837a-4ba2-8b6a-31fa458e7207/1015301/1594150441419/Project%3A+UdaciRacer+Simulator+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": {
        "key": "d5f0cc67-dda9-4528-b04e-b5f73f00f99c",
        "version": "1.0.0",
        "locale": "en-us",
        "duration": 40320,
        "semantic_type": "Project",
        "title": "UdaciRacer Simulator",
        "description": "## UdaciRacer Simulator\n\nWe are creating a racing game called **UdaciRacer Sim**, which allows a user to race a simulated racer! This racing game runs as a Node application. Players will get to choose their racer and the track they want to race on. The strategy of the game is for each player to choose a pod racer they expect to win over a certain race track based on the pod’s characteristics (acceleration, handling, and top speed). A pre-built API will create the race selected by the players and return a stream of information lasting the duration of the race, resulting in a final ranking of racers.\n\n### Project Files\n\nYou can clone the project files from the [project repository](https://github.com/udacity/nd032-c3-asynchronous-programming-with-javascript-project-starter).\n\n### Rubric\n\nYour project will be evaluated by a Udacity code reviewer according to the UdaciRacer Simulation [project rubric](https://review.udacity.com/#!/rubrics/2829/view). Please make sure to re-review the rubric for detailed project requirements prior to submission.\n\n### Submission\n\nOnce you've met all of the rubric requirements, you can either include a zip file or link to your GitHub repository.",
        "is_public": true,
        "summary": null,
        "forum_path": "",
        "rubric_id": "2829",
        "terminal_project_id": null,
        "resources": null,
        "image": null
      },
      "lab": null,
      "concepts": [
        {
          "id": 1015303,
          "key": "d8d7472e-6f09-4781-8f7d-5800eef020c2",
          "title": "Introduction",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "d8d7472e-6f09-4781-8f7d-5800eef020c2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1015310,
              "key": "a9b383de-b45b-4040-8a1d-14a6933dcfd5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Project Overview\nWe are creating a racing game called **UdaciRacer Sim**, which allows a user to race a simulated racer! This racing game runs as a Node application. Players will get to choose their racer and the track they want to race on. The strategy of the game is for each player to choose a pod racer they expect to win over a certain race track based on the pod’s characteristics (acceleration, handling, and top speed). A pre-built API will create the race selected by the players and return a stream of information lasting the duration of the race, resulting in a final ranking of racers. \n\nThe goal of the project will be to use the provided starter project to build the web interface for:\n1. Creating Races (the selection of tracks and pod racers)\n2. Displaying the real-time race updates \n3. A final score/rankings view\n\nThe starter files contain a partially built-out game that races cars—your job is to complete it! Throughout the game logic, you will find *\"TODO\"* comments that must be completed in order for the game to work. You are going to use the asynchronous skills you gained in the course to fill in the blanks in this game. \n\nThe game mechanics are this: you select a player and track, the game begins and you accelerate your racer by clicking an acceleration button. As you accelerate so do the other players and the leaderboard live-updates as players change position on the track. The final view is a results page displaying the players' rankings. \n\nThe game has three main views:\n\n1) The form to create a race\n\n2) The race progress view (this includes the live-updating leaderboard and acceleration button)\n\n3) The race results view\n\n## Starter Code\n\nWe have supplied you with the following:\n\n1) An API. The API is provided in the form of a binary held in the bin folder. You never need to open the binary file, as there are no edits you can make to it. Your work will be 100% in the front end.\n\n2) HTML Views. The focus of this course is not UI development or styling practice, so we have already provided you with pieces of UI, all you have to do is call them at the right times. \n\n\n## Getting Started\n\nIn this video, we'll walk through the starter code and get you set up for success in this project.\n",
              "instructor_notes": ""
            },
            {
              "id": 1038464,
              "key": "f4d16bf3-f4e8-4332-903a-66ea8a6fb0eb",
              "title": "ND032 JSND L4 A01 Instructions",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "b8rGy9Fm5tg",
                "china_cdn_id": "b8rGy9Fm5tg.mp4"
              }
            }
          ]
        },
        {
          "id": 1015304,
          "key": "b2dac26a-9f14-42c6-b9be-9a5103a797af",
          "title": "Instructions",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b2dac26a-9f14-42c6-b9be-9a5103a797af",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1016088,
              "key": "8fc00639-4c5b-4d6c-b6a4-677ed8c6ed16",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Getting Started\nThe first step is to clone this [project repository](https://github.com/udacity/nd032-c3-asynchronous-programming-with-javascript-project-starter).\n\nIn order to build this game, we need to run two things: the game engine API and the front end.\n\n### Start the Server (API)\n\nThe game engine has been compiled down to a binary so that you can run it on any system. Because of this, you cannot edit the API in any way, it is just a black box that we interact with via the API endpoints. \n\nTo run the server, locate your operating system and run the associated command in your terminal at the root of the project.\n\n| Your OS  | Command to start the API |\n| ------------- | ------------- |\n| Mac  | ```ORIGIN_ALLOWED=http://localhost:3000 ./bin/server-osx```  |\n| Windows  | ```ORIGIN_ALLOWED=http://localhost:3000 ./bin/server.exe```  |\n| Linux (Ubuntu, etc..) | ```ORIGIN_ALLOWED=http://localhost:3000 ./bin/server-linux```|\n\nIf you are on an older OS and the above command doesn't run for you - or if you know that you are running a 32bit system - add `-32` to the end of the file name. For reference, here are the same commands but for a 32-bit system.\n\n| 32 Bit Systems Only!  | Command to start the API |\n| ------------- | ------------- |\n| Mac  | ```ORIGIN_ALLOWED=http://localhost:3000 ./bin/server-osx-32```  |\n| Windows  | ```ORIGIN_ALLOWED=http://localhost:3000 ./bin/server-32.exe```  |\n| Linux (Ubuntu, etc..) | ```ORIGIN_ALLOWED=http://localhost:3000 ./bin/server-linux-32```|\n\nNote that this process will use your terminal tab, so you will have to open a new tab and navigate back to the project root to start the front end.\n\n### Start the Frontend\n\nFirst, run your preference of `npm install && npm start` or `yarn && yarn start` at the root of this project. Then you should be able to access http://localhost:3000.\n\n## Project Requirements\n\nYou can look at the rubric [here](https://review.udacity.com/#!/rubrics/2829/view) for a more in-depth look at the project requirements.\n\nThis starter code base has directions for you in `src/client/assets/javascript/index.js`. There you will be directed to use certain asynchronous methods to achieve tasks. You will know you're making progress as you can play through more and more of the game.\n\n### API Calls\n\nTo complete the project you must first create the calls to the API. These will all be fetch requests, and all information needed to create the request is provided in the instructions. The API calls are all at the bottom of the file: `src/client/assets/javascript/index.js`.\n\nBelow are a list of the API endpoints and the shape of the data they return. These are all of the endpoints you need to complete the game. Consult this information often as you complete the project:\n\n[GET] `api/tracks` \nList of all tracks\n- id: number (1)\n- name: string (\"Executioner\")\n- segments: number[] ([87,47,29,31,78,25,80,76,60,14....])\n\n[GET] `api/cars` \nList of all cars\n- id: number (3)\n- driver_name: string (\"Anakin Skywalker\")\n- top_speed: number (500)\n- acceleration: number (10)\n- handling: number (10)\n\n[GET] `api/races/${id}`\nInformation about a single race\n- status: RaceStatus (\"unstarted\" | \"in-progress\" | \"finished\")\n- positions object[] ([{ car: object, final_position: number (omitted if empty), speed: number, segment: number}])\n\n[POST] `api/races` \nCreate a race\n- id: number\n- track: string\n- player_id: number\n- cars: Cars[] (array of cars in the race)\n- results: Cars[] (array of cars in the position they finished, available if the race is finished)\n\n[POST] `api/races/${id}/start`\nBegin a race\n- Returns nothing\n\n[POST] `api/races/${id}/accelerate`\nAccelerate a car\n- Returns nothing\n\nTo complete the race logic, find all the TODO tags in index.js and read the instructions. ",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 1102310,
          "key": "5ea26199-fabf-4a29-8b6e-cfaa1db2cbeb",
          "title": "Workspace",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5ea26199-fabf-4a29-8b6e-cfaa1db2cbeb",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 1102832,
              "key": "2438d49d-a256-48bf-8d39-13ae58a3d403",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Note: The UdaciRacer simulator server is already running in the background. To run the UdaciRacer web client, you can install yarn packages and run this command: `yarn && yarn start` on the terminal. Next, click the `PREVIEW` button on the lower right-hand side of the Workspace to launch the web client. To stop yarn, you can click `ctrl + c`.",
              "instructor_notes": ""
            },
            {
              "id": 1102313,
              "key": "b22f13a6-fcc5-4aac-87c1-207262b1065a",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "r950324c1102310xREACTmlygumnk",
              "pool_id": "webterminal",
              "view_id": "react-1pk11",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "port": "3000",
                    "ports": [
                      3000,
                      3001
                    ],
                    "userCode": "curl -o- -L https://yarnpkg.com/install.sh | bash\nnode -v",
                    "openFiles": [
                      "/home/workspace/README.md"
                    ],
                    "showFiles": true,
                    "allowClose": true,
                    "allowSubmit": false,
                    "terminalTitle": "BASH",
                    "actionButtonText": "Preview",
                    "openTerminalOnStartup": true
                  },
                  "kind": "react"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "starter_files",
      "reason": "prefer master_archive_id"
    }
  ]
}